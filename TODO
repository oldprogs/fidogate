-*- Indented-Text -*-

X = for next release

	* ftnlock: put PID / command arg in lock file:
-------------------------------------------------------------------------
Date: Sun, 17 Nov 1996 18:04:24 +0000
From: Ingmar Hupp <hyper@mignon.franken.de>
To: fgate-users@gondor.gun.de
Subject: Possible ftnlock enhancement?

ftnlock currently uses only locking via a zero byte file. How about adding
an option, which enables ftnlock to put a text (e.g. the process ID of the
locking process) in the lock file? This would provide a way of checking if
the locking process is still alive.

It would be useful for example in the runout script, so one could put the
process ID of runout in the lockfile, (e.g. "ftnlock -l runout $$", the
second string is the text to put into the lockfile). Now it would be
possible to test if the process is still running, and if not, remove the old
lockfile (and create a new one).
-------------------------------------------------------------------------

	* ftntoss: make point tosser work without EchoMail4D

	* rfc2ftn: get Envelope-From address, add Envelope-From like
	  From line?

	* rfc2ftn: improve parser for 1st line. Use regexp library?

	* rfc2ftn: option to use node address, not gateway point
	  address for local users.

DONE.	* run*: Use ftnconfig.

DONE.	* config.c: replace cf_inbound() with cf_p_pinbound()?

DONE.	* ffxqt/ftntick: replace cf_set_inbound()?

	* "BestMatchAKA" parameter for all programs. Similar to
	  setting AKA based on current zone, using the AKA with best
	  fits the sender/receiver. For multi-point operation.

DONE.	* config.c: make Origin/Organization normal cf_get_string()
	  parameters.

DONE.	* ftn2rfc: check ^AREPLYADDR for valid Internet address. At
	  least check for something like ^AREPLYADDR Thomas Hamm%500:531/0.

	* rfc2ftn: config parameter to disable/enable X-Flags
	  processing. Add config parameter for specifying addresses
	  allowed to use X-Flags. Automatically using X-Flags: MN for
	  local users sending mails to Fido.

	* ftn2rfc: rewrite, split huge unpack() function into parts
	  for processing netmail and echomail.

	* ftnroute: crashmails to points via boss node.

	* ftn2rfc: process ^ARFC headers. If RFC level 1, import
	  important headers such as Date, Message-ID. If RFC level 2,
	  import all headers present.

	* ftnflo: pipe to program processing the entries (e.g. send
 	  with FTP), new scripts senduu, senduumail.

	* ftntick: remove FILES.BBS entry for old replaced file.

	* ftntick: if node is busy, put necessary data for
	  bink_attach() into separate file, don't wait, retry on the
	  next run.

	* ftnpack: remove 0-size arcmail from previous days.
	
	* ftnroute: new command "xroute" allowing routing based on
	  source *and* destination address.

	* ftnhatch: copy option: copy file to file area and put entry
	  into files.bbs (standard hatch behavior).

	* ftn2rfc: bounce messages should include the complete FTN
	  message with all kludges etc. to ease debugging.

DONE.	* kludge.c: handling traversing multiple kludges of the same
	  type.

	* ftnpack: runtime configuration of arcmail extension
	  usage. Use XX0-9 only, XX0-9 + XXA-F, wrap around to XX0 if
	  last one is too large, etc.
	  ArcMail extensions: mo[0-9], plus mo[a-f], maybe mo[a-z]?
	  runtime configuration of arcmail extensions usage.

	* areas: option -M MAXSIZE, limit maximum RFC message size to
	  MAXSIZE bytes, larger messages won't be gated.

	* ftn2rfc: restrict gateway to certain *Internet* addresses.

	* ftntick: announce new files via mail or news posting.

	* X-Gateway / ^AGATEWAY processing.

	* ftn2rfc: Newsgroups header?

MOSTLY	* ftnpack: better file attach processing, -F DIR option. Don't
DONE.	  copy netmail packets (do_noarc()), use rename(). If archiver
	  fails, move packets back to toss/out directory.

	* Check packet passwords of incoming packets.

	* ftntoss: check # of ^AVia lines

	* ftntoss: kill old messages (older than 2 weeks?)

OS2	* MSDOS, OS/2 port: switch stdin to binary mode. Command line option?
DONE.	  Problems with news batches (GD030V)?

	* ftn2rfc, rfc2ftn: passthru operation for FTN messages, in
	  particular EchoMail control information.

	* ftntoss: strip ^APATH for ZoneGate

	* ftntoss: ZoneGateFrom as suggested by <slapic@fido.hu>:
-------------------------------------------------------------------------
i receive mail from 1:270/101 as 1:270/104 (so i'm 1:270/104)
my normal address is 2:371/2000
i must forward/pack echomail as 2:371/2000
i should strip seen-by and path when forwarding mail from 1:270/101 
regardless whom i'm sending to.

at this moment i have two installed fidogate, one with aka 1:270/104, and 
one with aka 2:371/2000
my 1:270/104 system receives from 1:270/101, and packs for 2:371/2000
2:371/2000 receives from 1:270/104 and processes mail as normal.
and at the end, 2:371/2000 exports to 1:270/101...
it's not so nice... working, but not nice... i'd like to use one system 
on a phisical system.
so if i can do something like this:
ZoneGateFrom    1:270/101       270/101 104 371/2000
ZoneGate        1:270/101       270/101 371/2000
and as the zonegatefrom specifies, fidogate should strip seen-by and path 
every mail _from_ 1:270/101
-------------------------------------------------------------------------
	  This requires setting the sender address for the particular
	  area. Something else?
