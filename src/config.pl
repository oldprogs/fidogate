#!/usr/bin/perl
#
# $Id: config.pl,v 4.1 1998/02/22 16:25:50 mj Exp $
#
# Perl functions to read FIDOGATE config file
#

undef %CONFIG;

%CONFIG_default =
    (
##Automatically generated by subst.pl, DO NOT EDIT!!!##
	"logdir", "/var/log/fidogate",
	"aliases", "%C/aliases",
	"outpkt_news", "%S/outpkt/news",
	"newsvardir", "/var/lib/news",
	"seq_pack", "%V/seq/pack",
	"routing", "%C/routing",
	"outpkt_mail", "%S/outpkt/mail",
	"areas", "%C/areas",
	"spooldir", "/var/spool/fidogate",
	"toss_bad", "%S/toss/bad",
	"outrfc_news", "%S/outrfc/news",
	"toss_toss", "%S/toss/toss",
	"ifmaildir", "/usr/local/lib/ifmail",
	"history", "%V/history",
	"passwd", "%C/passwd",
	"seq_tick", "%V/seq/tick",
	"seq_ff", "%V/seq/ff",
	"outrfc_mail", "%S/outrfc/mail",
	"config_gate", "%C/gate.conf",
	"libdir", "/usr/lib/fidogate",
	"toss_route", "%S/toss/route",
	"seq_pkt", "%V/seq/pkt",
	"bindir", "/usr/lib/fidogate/bin",
	"config_ffx", "%C/ffx.conf",
	"ftpinbound", "/var/spool/bt/ftpin",
	"lock_history", "history",
	"logfile", "%G/log",
	"seq_news", "%V/seq/news",
	"toss_pack", "%S/toss/pack",
	"outpkt", "%S/outpkt",
	"lockdir", "/var/lock/fidogate",
	"vardir", "/var/lib/fidogate",
	"newsspooldir", "/var/spool/news",
	"seq_mail", "%V/seq/mail",
	"inbound", "/var/spool/bt/in",
	"btbasedir", "/var/spool/bt",
	"tick_hold", "%B/tick",
	"seq_toss", "%V/seq/toss",
	"hosts", "%C/hosts",
	"newslibdir", "/usr/lib/news",
	"seq_split", "%V/seq/split",
	"configdir", "/etc/fidogate",
	"newsetcdir", "/etc/news",
	"uuinbound", "/var/spool/bt/uuin",
	"config_main", "%C/toss.conf",
	"seq_msgid", "%V/seq/msgid",
	"packing", "%C/packing",
	"pinbound", "/var/spool/bt/pin",
     );
%CONFIG_abbrev =
    (
##Automatically generated by subst.pl, DO NOT EDIT!!!##
	"B", "btbasedir",
	"G", "logdir",
	"C", "configdir",
	"L", "libdir",
	"N", "bindir",
	"V", "vardir",
	"K", "lockdir",
	"U", "uuinbound",
	"S", "spooldir",
	"P", "pinbound",
	"I", "inbound",
     );



sub CONFIG_read {
    local($file) = @_;
    local *C;

    $file = &CONFIG_expand($file);

    open(C,"$file") || die "config.pl: can't open config file $file\n";
    while(<C>) {
	chop;
	next if( /^\s*\#/ );	# comments
	next if( /^\s*$/  );	# empty
	s/\s*$//;		# remove trailing white space
	s/^\s*//;		# remove leading white space
	($key,$arg) = split(' ', $_, 2);
	$key =~ tr/A-Z/a-z/;
	&CONFIG_read($arg) if($key eq "include");
	$CONFIG{$key} = $arg if(!$CONFIG{$key});
    }
    close(C);
}


sub CONFIG_get1 {
    local($key) = @_;

    return $CONFIG{$key} if($CONFIG{$key});
    return $CONFIG_default{$key};
}


sub CONFIG_get {
    local($key) = @_;
    local($ret);
    local($exp);

    $key =~ tr/A-Z/a-z/;
    return &CONFIG_expand( &CONFIG_get1($key) );
}


sub CONFIG_expand {
    local($v) = @_;
    local($exp);

    if($v =~ /^%([A-Z])/) {
	$exp = &CONFIG_get1($CONFIG_abbrev{$1});
	$v =~ s/^%./$exp/;
    }

    return $v;
}


sub CONFIG_debug {    
    local($key);

    for $key (keys %CONFIG) {
	print "$key = $CONFIG{$key} -> ", &CONFIG_get($key), "\n";
    }
}
