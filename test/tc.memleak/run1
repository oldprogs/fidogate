#!/usr/bin/perl -w

use strict;

my $IN  = "run1.in";
my $N   = 1000;
my $MAX = 10000;


system "../tr.init";

my $T  = "../../src/gate/rfc2ftn -c../cf/fidogate.conf -bn -o/dev/null";
#my $T  = "../../src/gate/test2 -c../cf/fidogate.conf -bn -o/dev/null";
my $PS = "ps u";

# fork and open pipe
my $pid = open(P, "|-");
$SIG{ALRM} = sub { die "run1: whoops, $T pipe broke\n" };

# child - program under test
unless($pid) {
    exec "$T"
      || die "run1: can't exec $T: $!\n";
    ##NOT REACHED##
    exit 1;
}

# parent - test case script
my $i;
my $n   = $N;
my $max = $MAX;

system "$PS $pid | grep ^USER";

for ($i=0; $i<$max; $i++) {
    system "$PS $pid | grep -v ^USER" if(($i % $n) == 0);

    open(F, "<$IN") || die "run1: can't open $IN: $!\n";
    while(<F>) {
	print P;
    }
    close(F);
}

close(P) || warn "run1: kid exited $?";

exit 0;
